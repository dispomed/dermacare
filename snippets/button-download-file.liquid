<!-- snippets/download-button.liquid -->
{%- liquid
  assign button_text = button_text | default: 'Download File'
  assign download_url = download_url
  assign full_width = full_width | default: false
  assign button_style = button_style | default: 'primary'
-%}

{%- if download_url != blank -%}
  <div class="download-button-section{% if full_width %} download-button--full-width{% endif %}">
    <a 
      href="{{ download_url }}" 
      class="download-button download-button--{{ button_style }}{% if full_width %} download-button--full{% endif %}"
      download
      target="_blank"
      rel="noopener noreferrer"
    >
      <span class="download-button__text">{{ button_text }}</span>
      <svg class="download-button__icon" width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
        <path d="M8.5 11.5a.5.5 0 0 1-1 0V6.707L5.354 8.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 6.707V11.5z"/>
        <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2zM9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5v2z"/>
      </svg>
    </a>
  </div>

  <style>
    .download-button-section {
      margin: 20px 0;
      text-align: center;
    }

    .download-button-section.download-button--full-width {
      width: 100%;
    }

    .download-button {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
      padding: 12px 24px;
      border: none;
      border-radius: 6px;
      text-decoration: none;
      font-weight: 600;
      font-size: 16px;
      line-height: 1.5;
      cursor: pointer;
      transition: all 0.2s ease-in-out;
      position: relative;
      overflow: hidden;
    }

    .download-button--full {
      width: 100%;
      max-width: 100%;
    }

    .download-button--primary {
      background-color: #007bff;
      color: #ffffff;
      border: 2px solid #007bff;
    }

    .download-button--primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
    }

    .download-button--secondary {
      background-color: #6c757d;
      color: #ffffff;
      border: 2px solid #6c757d;
    }

    .download-button--secondary:hover {
      background-color: #545b62;
      border-color: #545b62;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
    }

    .download-button--outline {
      background-color: transparent;
      color: #007bff;
      border: 2px solid #007bff;
    }

    .download-button--outline:hover {
      background-color: #007bff;
      color: #ffffff;
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
    }

    .download-button__text {
      white-space: nowrap;
    }

    .download-button__icon {
      flex-shrink: 0;
      transform: rotate(180deg);
      transition: transform 0.2s ease-in-out;
    }

    .download-button:hover .download-button__icon {
      transform: rotate(180deg) translateY(2px);
    }

    .download-button:active {
      transform: translateY(0);
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    }

    /* Responsive */
    @media (max-width: 768px) {
      .download-button {
        padding: 10px 20px;
        font-size: 14px;
      }
    }
  </style>

  <script>
    function downloadFile(event, url, filename) {
      event.preventDefault();
      
      try {
        // Method 1: Try fetch and blob approach (works best with Shopify CDN)
        fetch(url)
          .then(response => {
            if (!response.ok) throw new Error('Network response was not ok');
            return response.blob();
          })
          .then(blob => {
            const downloadUrl = window.URL.createObjectURL(blob);
            const link = document.createElement('a');
            link.href = downloadUrl;
            link.download = filename;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            window.URL.revokeObjectURL(downloadUrl);
          })
          .catch(() => {
            // Method 2: Fallback - direct link approach
            const link = document.createElement('a');
            link.href = url;
            link.download = filename;
            link.target = '_blank';
            link.rel = 'noopener noreferrer';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
          });
      } catch (error) {
        // Method 3: Last fallback - open in new window
        window.open(url, '_blank');
      }
    }
  </script>
{%- endif -%}